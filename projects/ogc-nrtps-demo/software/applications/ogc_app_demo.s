;
; File generated by cc65 v 2.19 - Git c226e58
;
	.fopt		compiler,"cc65 v 2.19 - Git c226e58"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_ogc_lib_os_nrtps_set
	.export		_this_app
	.export		_main_application
	.export		_app_init

.segment	"DATA"

_this_app:
	.dword	$00000000
	.word	$0000

; ---------------------------------------------------------------
; void __near__ main_application (void *args)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main_application: near

.segment	"CODE"

;
; {
;
	jsr     pushax
;
; if ( NULL == args )
;
	jsr     decsp7
	ldy     #$07
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L001C
;
; args = &this_app;
;
	lda     #<(_this_app)
	ldx     #>(_this_app)
	dey
	jsr     staxysp
;
; this_data = ( struct cycle* )args;
;
	ldy     #$08
L001C:	lda     (sp),y
	tax
	dey
	lda     (sp),y
	ldy     #$04
	jsr     staxysp
;
; bob = 50;
;
	ldy     #$00
	lda     #$32
	sta     (sp),y
	tya
	iny
	sta     (sp),y
	iny
	sta     (sp),y
	iny
	sta     (sp),y
;
; switch ( this_data->loop )
;
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     ldeaxi
;
; }
;
	ldy     sreg+1
	cpy     #$00
	jne     L0004
	ldy     sreg
	cpy     #$00
	jne     L0004
	cpx     #$00
	jne     L0004
	cmp     #$00
	beq     L0005
	cmp     #$01
	beq     L000C
	cmp     #$02
	jeq     L0013
	jmp     L0004
;
; this_data->loop++;
;
L0005:	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     pushax
	jsr     ldeaxi
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$00
	jsr     steaxspidx
	jsr     resteax
;
; status = ogc_lib_os_nrtps_set( 0U, main_application, args );
;
	jsr     decsp6
	ldy     #$02
	lda     #$00
	sta     (sp),y
	iny
	sta     (sp),y
	iny
	sta     (sp),y
	iny
	sta     (sp),y
	lda     #<(_main_application)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(_main_application)
	sta     (sp),y
	ldy     #$0E
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _ogc_lib_os_nrtps_set
	ldy     #$06
	sta     (sp),y
;
; }
;
	cmp     #$01
	jeq     L0004
	cmp     #$02
	jeq     L0004
	cmp     #$FF
	jne     L0004
;
; break;
;
	jmp     L0004
;
; this_data->loop++;
;
L000C:	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     pushax
	jsr     ldeaxi
	jsr     saveeax
	ldy     #$01
	jsr     inceaxy
	ldy     #$00
	jsr     steaxspidx
	jsr     resteax
;
; bob += 10;
;
	ldx     #$00
	stx     sreg
	stx     sreg+1
	lda     #$0A
	jsr     laddeq0sp
;
; status = ogc_lib_os_nrtps_set( 0U, main_application, args );
;
	jsr     decsp6
	ldy     #$02
	lda     #$00
	sta     (sp),y
	iny
	sta     (sp),y
	iny
	sta     (sp),y
	iny
	sta     (sp),y
	lda     #<(_main_application)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(_main_application)
	sta     (sp),y
	ldy     #$0E
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _ogc_lib_os_nrtps_set
	ldy     #$06
	sta     (sp),y
;
; }
;
	cmp     #$01
	beq     L0004
	cmp     #$02
	beq     L0004
	cmp     #$FF
	bne     L0004
;
; break;
;
	jmp     L0004
;
; this_data->loop = 0U;
;
L0013:	ldy     #$07
	jsr     pushwysp
	ldx     #$00
	stx     sreg
	stx     sreg+1
	txa
	tay
	jsr     steaxspidx
;
; this_data->color++;
;
	ldy     #$05
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	sta     sreg
	stx     sreg+1
	sta     ptr1
	stx     ptr1+1
	iny
	lda     (ptr1),y
	tax
	dey
	lda     (ptr1),y
	clc
	adc     #$01
	bcc     L001D
	inx
L001D:	sta     (sreg),y
	iny
	txa
	sta     (sreg),y
;
; status = ogc_lib_os_nrtps_set( 1000U, main_application, args );
;
	jsr     decsp6
	ldy     #$02
	lda     #$E8
	sta     (sp),y
	lda     #$03
	iny
	sta     (sp),y
	lda     #$00
	iny
	sta     (sp),y
	iny
	sta     (sp),y
	lda     #<(_main_application)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(_main_application)
	sta     (sp),y
	ldy     #$0E
	lda     (sp),y
	tax
	dey
	lda     (sp),y
	jsr     _ogc_lib_os_nrtps_set
	ldy     #$06
	sta     (sp),y
;
; }
;
	cmp     #$01
	beq     L0004
	cmp     #$02
	beq     L0004
	cmp     #$FF
;
; }
;
L0004:	ldy     #$09
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ app_init (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_app_init: near

.segment	"CODE"

;
; status = ogc_lib_os_nrtps_set( 1000U, main_application, &this_app );
;
	jsr     decsp7
	ldy     #$02
	lda     #$E8
	sta     (sp),y
	lda     #$03
	iny
	sta     (sp),y
	lda     #$00
	iny
	sta     (sp),y
	iny
	sta     (sp),y
	lda     #<(_main_application)
	ldy     #$00
	sta     (sp),y
	iny
	lda     #>(_main_application)
	sta     (sp),y
	lda     #<(_this_app)
	ldx     #>(_this_app)
	jsr     _ogc_lib_os_nrtps_set
	ldy     #$00
	sta     (sp),y
;
; }
;
	cmp     #$01
	beq     L0004
	cmp     #$02
	beq     L0004
	cmp     #$FF
;
; }
;
L0004:	jmp     incsp1

.endproc

